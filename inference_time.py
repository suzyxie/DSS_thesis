# -*- coding: utf-8 -*-
"""Inference_time.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uOHuKCWb-pODeX_COCyiU084PdTnGcdl
"""

import os
import pandas as pd
import numpy as np
from PIL import Image
import matplotlib.pyplot as plt
import cv2
from google.colab.patches import cv2_imshow
import tensorflow as tf
from tensorflow.keras.optimizers.schedules import PolynomialDecay
from tensorflow.keras.losses import CategoricalCrossentropy
from tensorflow.keras.metrics import MeanIoU
from tensorflow.keras.models import load_model
import time

def calculate_inference_time(model, input_data, num_samples=450):
    # Record the start time
    start_time = time.time()

    # Make the prediction
    prediction = model.predict(input_data[:num_samples])

    # Record the end time
    end_time = time.time()

    # Calculate the elapsed time
    elapsed_time = end_time - start_time

    # Print the elapsed time
    print(f"Time taken for prediction per image: {elapsed_time/num_samples} seconds")

teacher_model = load_model("/home/u248490/resize_720/teacher_model_128.keras")
student_model_16_no_kd_100 = load_model("/home/u248490/resize_720/student_model_no_KD_16.keras")
student_model_64_no_kd_100 = load_model("/home/u248490/resize_720/student_model_no_KD_64.keras")
student_model_16_no_kd_200 = load_model("/home/u248490/resize_720/student_model_no_KD_16_no_batchnorm_200.keras")
student_model_64_no_kd_200 = load_model("/home/u248490/resize_720/student_model_no_KD_64_nobatchnorm_200.keras")
student_model_16_kd_100 = load_model("/home/u248490/resize_720/KD_mobilenet_16")
student_model_64_kd_100 = load_model("/home/u248490/resize_720/KD_mobilenet_64")
student_model_16_kd_200 = load_model("/home/u248490/resize_720/KD_mobilenet_16_no_batchnorm_200")
student_model_64_kd_200 = load_model("/home/u248490/resize_720/KD_mobilenet_64_no_batchnorm_200")

X_train = np.load('/home/u248490/resize_720/X_train_720.npy')
X_train = X_train.astype('float32')

num_samples =[10,100,1000]
for samples in num_samples:
  calculate_inference_time(teacher_model, X_train,samples)
  calculate_inference_time(student_model_16_no_kd_100, X_train,samples)
  calculate_inference_time(student_model_64_no_kd_100, X_train,samples)
  calculate_inference_time(student_model_16_no_kd_200, X_train,samples)
  calculate_inference_time(student_model_64_no_kd_200, X_train,samples)
  calculate_inference_time(student_model_16_kd_100, X_train,samples)
  calculate_inference_time(student_model_64_kd_100, X_train,samples)
  calculate_inference_time(student_model_16_kd_200, X_train,samples)
  calculate_inference_time(student_model_64_kd_200, X_train,samples)